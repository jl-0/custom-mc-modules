{
  "version": "1.0",
  "metadata": {
    "name": "Unity Terraform Modules Registry",
    "description": "Official Unity Science Data System Terraform module registry providing reusable infrastructure components",
    "last_updated": "2025-06-30T22:00:00Z",
    "repository": "https://github.com/jl-0/custom-mc-modules",
    "documentation": "https://jl-0.github.io/custom-mc-modules",
    "maintainer": "Unity SDS Team",
    "license": "Apache-2.0"
  },
  "modules": {
    "unity-s3": {
      "description": "Unity S3 bucket with security best practices and lifecycle management",
      "source": "github.com/jl-0/custom-mc-modules//modules/s3",
      "documentation": "https://github.com/jl-0/custom-mc-modules/blob/main/modules/s3/README.md",
      "category": "storage",
      "tags": ["s3", "storage", "security", "lifecycle"],
      "versions": {
        "latest": {
          "ref": "main",
          "terraform_version": ">= 1.0",
          "providers": {
            "aws": ">= 4.0"
          }
        }
      },
      "inputs": {
        "bucket_name": {
          "description": "Name of the S3 bucket",
          "type": "string",
          "required": true,
          "validation": "Must be 3-63 characters, lowercase letters, numbers, and hyphens only"
        },
        "environment": {
          "description": "Environment name (e.g., dev, staging, prod)",
          "type": "string",
          "default": "dev",
          "required": false
        },
        "project": {
          "description": "Project name",
          "type": "string",
          "default": "unity",
          "required": false
        },
        "versioning_enabled": {
          "description": "Enable versioning on the bucket",
          "type": "bool",
          "default": true,
          "required": false
        },
        "encryption_enabled": {
          "description": "Enable server-side encryption",
          "type": "bool",
          "default": true,
          "required": false
        },
        "kms_key_id": {
          "description": "KMS key ID for encryption (if null, uses AES256)",
          "type": "string",
          "default": null,
          "required": false
        },
        "block_public_access": {
          "description": "Block all public access to the bucket",
          "type": "bool",
          "default": true,
          "required": false
        },
        "enable_standard_lifecycle": {
          "description": "Enable standard Unity lifecycle configuration",
          "type": "bool",
          "default": false,
          "required": false
        },
        "lifecycle_rules": {
          "description": "List of custom lifecycle rules for the bucket",
          "type": "list(object)",
          "default": [],
          "required": false
        },
        "tags": {
          "description": "Additional tags to apply to all resources",
          "type": "map(string)",
          "default": {},
          "required": false
        }
      },
      "outputs": {
        "bucket_id": "The name of the bucket",
        "bucket_arn": "The ARN of the bucket",
        "bucket_domain_name": "The bucket domain name",
        "bucket_url_s3": "S3 protocol URL of the bucket",
        "console_url": "AWS Console URL for the bucket"
      },
      "examples": [
        {
          "name": "Basic S3 Bucket",
          "description": "Simple S3 bucket with default security settings",
          "code": "module \"unity_bucket\" {\n  source = \"github.com/jl-0/custom-mc-modules//modules/s3?ref=main\"\n\n  bucket_name = \"unity-example-bucket\"\n  environment = \"dev\"\n  project     = \"unity\"\n}"
        },
        {
          "name": "S3 with Lifecycle",
          "description": "S3 bucket with standard Unity lifecycle rules",
          "code": "module \"unity_data_bucket\" {\n  source = \"github.com/jl-0/custom-mc-modules//modules/s3?ref=main\"\n\n  bucket_name               = \"unity-data-storage\"\n  environment               = \"prod\"\n  enable_standard_lifecycle = true\n}"
        }
      ]
    },
    "unity-vpc": {
      "description": "Unity VPC with public/private subnets across multiple AZs",
      "source": "github.com/jl-0/custom-mc-modules//modules/vpc",
      "documentation": "https://github.com/jl-0/custom-mc-modules/blob/main/modules/vpc/README.md",
      "category": "networking",
      "tags": ["vpc", "networking", "subnets", "nat"],
      "versions": {
        "latest": {
          "ref": "main",
          "terraform_version": ">= 1.0",
          "providers": {
            "aws": ">= 4.0"
          }
        }
      },
      "inputs": {
        "vpc_cidr": {
          "description": "CIDR block for the VPC",
          "type": "string",
          "required": true,
          "validation": "Must be a valid CIDR block (e.g., 10.0.0.0/16)"
        },
        "name_prefix": {
          "description": "Name prefix for all resources",
          "type": "string",
          "required": true
        },
        "availability_zones": {
          "description": "List of availability zones",
          "type": "list(string)",
          "required": true
        },
        "enable_nat_gateway": {
          "description": "Enable NAT Gateway for private subnets",
          "type": "bool",
          "default": true,
          "required": false
        },
        "enable_dns_hostnames": {
          "description": "Enable DNS hostnames in the VPC",
          "type": "bool",
          "default": true,
          "required": false
        },
        "tags": {
          "description": "Additional tags to apply to all resources",
          "type": "map(string)",
          "default": {},
          "required": false
        }
      },
      "outputs": {
        "vpc_id": "The ID of the VPC",
        "vpc_cidr_block": "The CIDR block of the VPC",
        "public_subnet_ids": "List of public subnet IDs",
        "private_subnet_ids": "List of private subnet IDs",
        "nat_gateway_ids": "List of NAT Gateway IDs",
        "internet_gateway_id": "The ID of the Internet Gateway"
      },
      "examples": [
        {
          "name": "Basic VPC",
          "description": "VPC with public and private subnets",
          "code": "module \"unity_vpc\" {\n  source = \"github.com/jl-0/custom-mc-modules//modules/vpc?ref=main\"\n\n  vpc_cidr           = \"10.0.0.0/16\"\n  name_prefix        = \"unity-dev\"\n  availability_zones = [\"us-west-2a\", \"us-west-2b\"]\n}"
        }
      ]
    }
  },
  "categories": {
    "storage": {
      "name": "Storage",
      "description": "Storage services including S3, EFS, and EBS",
      "modules": ["unity-s3"]
    },
    "networking": {
      "name": "Networking",
      "description": "Network infrastructure including VPC, subnets, and load balancers",
      "modules": ["unity-vpc"]
    }
  },
  "quickstart": {
    "description": "Get started with Unity Terraform modules",
    "steps": [
      "Choose a module from the registry",
      "Review the module documentation and examples",
      "Add the module to your Terraform configuration",
      "Configure the required inputs",
      "Run terraform init and terraform apply"
    ],
    "example": {
      "name": "Complete Infrastructure Example",
      "description": "Example showing how to use multiple modules together",
      "code": "# VPC\nmodule \"unity_vpc\" {\n  source = \"github.com/jl-0/custom-mc-modules//modules/vpc?ref=main\"\n\n  vpc_cidr           = \"10.0.0.0/16\"\n  name_prefix        = \"unity-dev\"\n  availability_zones = [\"us-west-2a\", \"us-west-2b\"]\n}\n\n# S3 Bucket\nmodule \"unity_bucket\" {\n  source = \"github.com/jl-0/custom-mc-modules//modules/s3?ref=main\"\n\n  bucket_name               = \"unity-data-bucket\"\n  environment               = \"dev\"\n  enable_standard_lifecycle = true\n}"
    }
  }
}